{"version":3,"sources":["components/Calendar/CalendarDays/CalendarDaysItem/index.tsx","helpers/mayanNumber.ts","components/Typography/TextCircle/index.ts","uses/useFormat.ts","uses/useShape.ts","components/Calendar/CalendarDays/index.tsx","uses/useMoon.ts","components/Moon/MoonPhase/index.tsx","components/Month/MonthDays/index.tsx","components/Month/MonthContainer/index.tsx","components/Month/MonthName/index.tsx","components/Month/MonthPercent/index.tsx","components/Month/index.tsx","components/ControlPosition/index.tsx","components/Icons/IconArrow/index.tsx","components/Typography/Text/index.tsx","components/Form/ButtonArrow/index.tsx","components/Moon/MoonToday/MoonTodayControls/index.tsx","components/Moon/MoonToday/MoonTodayInfo/MoonTodayInfoLabel/index.tsx","components/Moon/MoonToday/MoonTodayInfo/MoonTodayInfoTop/index.tsx","components/Moon/MoonToday/MoonTodayInfo/MoonTodayInfoYear/index.tsx","components/Moon/MoonToday/MoonTodayInfo/index.tsx","components/Moon/MoonToday/index.tsx","components/YearControls/index.tsx","components/Calendar/index.tsx","components/Form/InputRange/styles.ts","components/Form/InputRange/index.tsx","components/Form/InputSwitch/styles.ts","components/Form/InputSwitch/index.tsx","components/LangSelect/styles.ts","components/LangSelect/index.tsx","layout/Header/styles.ts","layout/Header/index.tsx","layout/Footer/styles.ts","layout/Footer/index.tsx","uses/useWindowSize.ts","providers/MainProvider/index.tsx","providers/LangProvider/index.tsx","providers/ThemeProvider/index.tsx","layout/Main/styles.ts","layout/Main/index.tsx","reportWebVitals.ts","i18n.tsx","index.tsx"],"names":["CalendarDaysItem","active","glyphs","theme","x","y","props","align","fontSize","fill","main","second","fontFamily","height","listening","offsetX","wrap","rotation","verticalAlign","width","offsetY","length","text","MayanNumber","this","mayanGlyph","bind","num","toString","split","map","s","parseInt","value","a","digits","base20","mayan","n","String","fromCharCode","TextCircle","ctx","radius","start","end","FILL","STROKE","renderType","multiplyCurrentTransform","circleText","textWidth","measureText","angularWidth","pixelAngularSize","pA","pAS","aw","wScale","aligned","dir","forward","trim","globalAlpha","isNaN","undefined","TypeError","textAlign","Math","PI","i","xDx","cos","xDy","sin","save","transform","setTransform","fillText","strokeText","restore","measure","font","UseFormat","convertToRoman","useCallback","romanLookUp","M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I","result","Object","keys","sort","b","forEach","key","getActiveMonth","today","current","todayMonth","getMonth","todayYear","getFullYear","monthMonth","monthYear","day","getDaysInMonth","currentMonth","fixDate","year","month","form","fix","parse","format","Date","toDegrees","radians","toRadians","degrees","UseShapes","createCircle","options","init","close","beginPath","entries","item","setAttr","arc","stroke","closePath","createText","CalendarDays","angle","animate","lang","useMemo","useState","items","setItems","borderLine","circ","translate","rotate","fillStyle","lineWidth","strokeStyle","createBackground","hexRgb","alpha","setLineDash","createMayanDays","temp","currentDate","then","pos","push","createDays","dayRoman","Array","from","reverse","join","textBaseline","useEffect","sceneFunc","reset","to","Shape","get","isArray","index","UseMoon","normalize","v","floor","getMoonFraction","days_after_new_moon","getTime","m","abs","getMoonPhaseName","yearIn","monthIn","dayIn","jd","phase","ceil","getNamePhase","getMoonInfo","date","age","distance","longitude","trajectory","yy","mm","k1","k2","k3","ip","dp","np","getDate","MoonPhase","delay","size","strokeWidth","drawPath","posX","posY","drawLine","color","moveTo","lineTo","drawPhase","shape","fillShape","scale","shadowMoon","phases","MonthDays","lastDay","setToday","selectDay","selectDate","onClick","onTap","MonthContainer","dayMonth","factoryPhases","MonthName","updateName","endAngle","initAngle","createName","getValue","prop","MonthPercent","maskLines","total","config","duration","Group","clipFunc","dash","listen","Month","t","useTranslation","process","toLowerCase","ControlPosition","IconArrow","type","line","point","offY","PosX","icon","scaleX","Text","ButtonArrow","numbText","setNumbText","getNumberMayan","e","getNumber","MoonTodayControls","setYear","onChange","MoonTodayInfoLabel","offSetY","label","symbol","setSymbol","fontStyle","MoonTodayInfoTop","compareAsc","MoonTodayInfoYear","moonPhase","MoonTodayInfo","MoonToday","YearControls","Calendar","increment","createMonths","months","InputRangeLabel","styled","InputRangeSpan","span","InputRange","set","min","max","event","target","className","InputSwitchLabel","InputSwitchSpan","InputSwitchSlider","div","InputSwitch","labelL","labelR","name","LangSelectDiv","LangSelect","langs","setLang","onSelectLang","HeaderDateDiv","HeaderHeader","header","HeaderMoonDiv","Header","setDate","setScale","setRadius","setColors","setColor","onThemeChange","onScale","selected","FooterFooter","footer","Footer","redirect","window","open","UseWindowSize","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","MainContext","createContext","MainProvider","children","setAnimate","loaded","setLoaded","setPos","WebFontLoader","load","google","families","fontactive","setTimeout","Provider","LangContext","LangProvider","i18n","changeLanguage","ThemeContext","ThemeProvider","MainSection","section","Main","useContext","style","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","resources","en","translation","qu","lng","fallbackLng","use","initReactI18next","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdc518c8.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { Text } from 'react-konva';\n\nimport { ICalendarDaysItem } from './interfaces';\n\n// calendar days item\nconst CalendarDaysItem: FC<ICalendarDaysItem> = ({\n  active,\n  glyphs,\n  theme,\n  x,\n  y\n}) => {\n  const props = {\n    align: 'center',\n    fontSize: 10,\n    fill: active ? theme.main : theme.second,\n    fontFamily: 'MayanNumerals',\n    height: 10,\n    listening: false,\n    offsetX: 15,\n    wrap: 'char',\n    rotation: 90,\n    verticalAlign: 'middle',\n    width: 30,\n    x,\n    y\n  };\n\n  // render\n  return (\n    <>\n      <Text\n        {...props}\n        offsetY={glyphs.length > 1 ? 12 : 5}\n        text={glyphs[0]} />\n\n      {glyphs.length > 1 && <Text\n        {...props}\n        offsetY={5}\n        text={glyphs[1]} />}\n    </>\n  );\n};\n\nexport default CalendarDaysItem;","// mayan number\nexport default class MayanNumber {\n  // constructor\n  constructor() {\n    this.mayanGlyph = this.mayanGlyph.bind(this);\n  }\n\n  // base 20\n  base20(num: any) {\n    return num.toString(20).split(\"\").map((s: string) => parseInt(s, 20));\n  }\n\n  // mayan glyph\n  async mayanGlyph(value: any) {\n    const digits = this.base20(value);\n    const mayan = digits.map((n: any) => String.fromCharCode(0xD834, 0xDEE0 + n));\n\n    return mayan;\n  }\n}","export default class TextCircle {\n  public FILL = 0;        // const to indicate filltext render\n  public STROKE = 1;\n  public renderType = this.FILL; // used internal to set fill or stroke text\n  public multiplyCurrentTransform = true; // if true Use current transform when rendering\n\n  // constructor\n  constructor(ctx: CanvasRenderingContext2D, text: string, x: number, y: number, radius: number, start: number, end?: any, forward: boolean = true) {\n    this.circleText(ctx, text, x, y, radius, start, end, forward = true);\n  }\n\n  // measure circle text\n  measure(ctx: CanvasRenderingContext2D, text: string, radius: number) {\n    const textWidth = ctx.measureText(text).width;\n\n    return {\n      width: textWidth,\n      angularWidth: (1 / radius) * textWidth,\n      pixelAngularSize: 1 / radius\n    };\n  }\n\n  // displays text along a circle\n  // ctx: canvas context\n  // text: string of text to measure\n  // x,y: position of circle center\n  // r: radius of circle in pixels\n  // start: angle in radians to start. \n  // [end]: optional. If included text align is ignored and the text is \n  //        scaled to fit between start and end;\n  // [forward]: optional default true. if true text direction is forwards, if false  direction is backward\n  circleText(ctx: CanvasRenderingContext2D, text: string, x: number, y: number, radius: number, start: number, end?: any, forward: boolean = true) {\n    let textWidth, pA, pAS, a, aw, wScale, aligned, dir;\n\n    if (text.trim() === \"\" || ctx.globalAlpha === 0)\n      return;\n\n    if (isNaN(x) || isNaN(y) || isNaN(radius) || isNaN(start) \n      || (end !== undefined && end !== null && isNaN(end))) {\n      throw TypeError(\"circle text arguments requires a number for x,y, radius, start, and end.\")\n    }\n\n    aligned = ctx.textAlign;        // save the current textAlign so that it can be restored at end\n    dir = forward ? 1 : forward === false ? -1 : 1;  // set dir if not true or false set forward as true  \n    pAS = 1 / radius;               // get the angular size of a pixel in radians\n    textWidth = ctx.measureText(text).width; // get the width of all the text\n\n    if (end !== undefined && end !== null) { // if end is supplied then fit text between start and end\n      pA = ((end - start) / textWidth) * dir;\n      wScale = (pA / pAS) * dir;\n    } else {                 // if no end is supplied correct start and end for alignment\n      // if forward is not given then swap top of circle text to read the correct direction\n      if (forward === null || forward === undefined) {\n        if (((start % (Math.PI * 2)) + Math.PI * 2) % (Math.PI * 2) > Math.PI) {\n          dir = -1;\n        }\n      }\n\n      pA = -pAS * dir;\n      wScale = -1 * dir;\n\n      switch (aligned) {\n        case \"center\":       // if centered move around half width\n          start -= (pA * textWidth) / 2;\n          end = start + pA * textWidth;\n          break;\n        case \"right\":// intentionally falls through to case \"end\"\n        case \"end\":\n          end = start;\n          start -= pA * textWidth;\n          break;\n        case \"left\":  // intentionally falls through to case \"start\"\n        case \"start\":\n          end = start + pA * textWidth;\n      }\n    }\n\n    ctx.textAlign = \"center\";                     // align for rendering\n    a = start;                                    // set the start angle\n\n    for (let i = 0; i < text.length; i += 1) {    // for each character\n      aw = ctx.measureText(text[i]).width * pA; // get the angular width of the text\n      var xDx = Math.cos(a + aw / 2);           // get the yAxies vector from the center x,y out\n      var xDy = Math.sin(a + aw / 2);\n\n      if (this.multiplyCurrentTransform) { // transform multiplying current transform\n        ctx.save();\n\n        ctx.transform(-xDy * wScale, xDx * wScale, -xDx, -xDy, xDx * radius + x, xDy * radius + y);\n      } else {\n        if (xDy < 0) { // is the text upside down. If it is flip it\n          ctx.setTransform(-xDy * wScale, xDx * wScale, -xDx, -xDy, xDx * radius + x, xDy * radius + y);\n        } else {\n          ctx.setTransform(-xDy * wScale, xDx * wScale, xDx, xDy, xDx * radius + x, xDy * radius + y);\n        }\n      }\n\n      if (this.renderType === this.FILL) {\n        ctx.fillText(text[i], 0, 0);    // render the character\n      } else {\n        ctx.strokeText(text[i], 0, 0);  // render the character\n      }\n\n      if (this.multiplyCurrentTransform) {  // restore current transform\n        ctx.restore();\n      }\n\n      a += aw;                     // step to the next angle\n    }\n\n    // all done clean up.\n    if (!this.multiplyCurrentTransform) {\n      ctx.setTransform(1, 0, 0, 1, 0, 0); // restore the transform\n    }\n\n    ctx.textAlign = aligned; // restore the text alignment\n  }\n\n  // define fill text\n  fillCircleText(ctx: CanvasRenderingContext2D, text: string, x: number, y: number, radius: number, start: number, end?: any, forward: boolean =  true) {\n    this.renderType = this.FILL;\n    this.circleText(ctx, text, x, y, radius, start, end, forward);\n  }\n\n  // define stroke text\n  strokeCircleText(ctx: CanvasRenderingContext2D, text: string, x: number, y: number, radius: number, start: number, end: number, forward: boolean) {\n    this.renderType = this.STROKE;\n    this.circleText(ctx, text, x, y, radius, start, end, forward);\n  }\n  \n  // define measure text\n  measureCircleTextExt(ctx: CanvasRenderingContext2D, text: string, radius: number) {\n    return this.measure(ctx, text, radius);\n  }\n\n  // text\n  text(ctx: CanvasRenderingContext2D, font: string, text: string, x: number, y: number) {\n    ctx.font = font;\n    ctx.fillText(text, x, y);\n  }\n}","import { getDaysInMonth, format, parse } from \"date-fns\";\nimport { useCallback } from \"react\";\n\n// Hook\nfunction UseFormat() {\n  // convert to roman\n  const convertToRoman = useCallback((num: number): string => {\n    const romanLookUp: any = { M: 1000, CM: 900, D: 500, CD: 400, C: 100, XC: 90, L: 50, XL: 40, X: 10, IX: 9, V: 5, IV: 4, I: 1 };\n    let result = '';\n\n    // Sort the object values to get them to descending order\n    Object.keys(romanLookUp).sort((a, b) => romanLookUp[b] - romanLookUp[a]).forEach((key) => {\n      while (num >= romanLookUp[key]) {\n        result += key;\n        num -= romanLookUp[key];\n      }\n    });\n\n    return result;\n  }, []);\n\n  // get current active month\n  const getActiveMonth = useCallback((today: Date, current: Date): Object => {\n    const todayMonth: number = today.getMonth();\n    const todayYear: number = today.getFullYear();\n\n    const monthMonth: number = current.getMonth();\n    const monthYear: number = current.getFullYear();\n\n    return {\n      active: ((monthMonth <= todayMonth && todayYear === monthYear)) || monthYear < todayYear,\n      day: getDaysInMonth(current),\n      currentMonth: todayMonth === monthMonth && todayYear === monthYear\n    };\n  }, []);\n\n  // fix date\n  const fixDate = useCallback((year: number, month: number) => {\n    const form: string = 'yyyy-M-dd';\n    const fix: any = parse(format(new Date(`${year}-${month}-01`), form), form, new Date());\n    const current = parse(format(new Date(`${year}-${month}-${getDaysInMonth(fix)}`), form), form, new Date());\n\n    return current;\n  }, []);\n\n  // to degrees\n  const toDegrees = useCallback((radians) =>\n    radians * (180 / Math.PI), []);\n\n  // radians\n  const toRadians = useCallback((degrees: number) => {\n    return degrees * (Math.PI / 180);\n  }, []);\n\n  // render\n  return {\n    convertToRoman,\n    fixDate,\n    getActiveMonth,\n    toDegrees,\n    toRadians\n  }\n}\n\nexport default UseFormat;","import { Context } from 'konva/types/Context';\n\n// Hook\nfunction UseShapes() {\n  // create circle\n  const createCircle = (ctx: Context, options: {}, radius: number, init: number, end: number, close: boolean = false, x: number, y: number) => {\n    ctx.save();\n    ctx.beginPath();\n\n    for (let item of Object.entries(options)) {\n      ctx.setAttr(item[0], item[1]);\n    }\n\n    ctx.arc(x, y, radius, init, end, close);\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.closePath();\n    ctx.restore();\n  };\n\n  // create text\n  const createText = (ctx: Context, options: {}, text: string, x: number, y: number) => {\n    ctx.save();\n    ctx.beginPath();\n\n    for (let item of Object.entries(options)) {\n      ctx.setAttr(item[0], item[1]);\n    }\n\n    ctx.fillText(text, x, y);\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.closePath();\n    ctx.restore();\n  };\n\n\n  // return\n  return {\n    createCircle,\n    createText\n  };\n}\n\nexport default UseShapes;","import React, { FC, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Context } from 'konva/types/Context';\nimport { Shape, Group } from 'react-konva';\nimport hexRgb from 'hex-rgb';\nimport { Spring, animated as a } from '@react-spring/konva';\n\nimport CalendarDaysItem from './CalendarDaysItem';\nimport MayanNumber from '../../../helpers/mayanNumber';\nimport TextCircle from '../../Typography/TextCircle';\n\nimport UseFormat from '../../../uses/useFormat';\nimport UseShapes from '../../../uses/useShape';\n\nimport { ICalendarDays } from './interfaces';\n\n// calendar days\nconst CalendarDays: FC<ICalendarDays> = ({\n  angle,\n  animate,\n  day,\n  lang,\n  radius,\n  theme,\n  x,\n  y\n}) => {\n  const { convertToRoman } = UseFormat();\n  const { createCircle } = UseShapes();\n\n  const mayan = useMemo(() => new MayanNumber(), []); // mayan\n\n  const [items, setItems] = useState<any>([]); // items\n\n  // border line\n  const borderLine = useCallback((ctx: Context, circ: number) => {\n    ctx.translate(x, y);\n    ctx.rotate((day - 1) * angle);\n    ctx.translate(-x, -y);\n\n    createCircle(ctx, {\n      fillStyle: 'transparent',\n      lineWidth: 31,\n      strokeStyle: theme.second,\n    }, radius, -circ, circ, false, x + 2, y);\n  }, [angle, createCircle, day, radius, theme, x, y]);\n\n  // create circle\n  const createBackground = useCallback((ctx: Context) => {\n    createCircle(ctx, {\n      'fillStyle': 'transparent',\n      'lineWidth': 0.5,\n      'strokeStyle': hexRgb(theme.second, { alpha: 1, format: 'css' })\n    }, radius - 15, 0, Math.PI * 2, true, x, y);\n\n    ctx.setLineDash([1, 8]);\n\n    createCircle(ctx, {\n      'fillStyle': 'transparent',\n      'lineWidth': 0.5,\n      'strokeStyle': hexRgb(theme.second, { alpha: 1, format: 'css' })\n    }, radius - 17, 0, Math.PI * 2, true, x, y);\n\n    ctx.setLineDash([0, 0]);\n\n    createCircle(ctx, {\n      'fillStyle': 'transparent',\n      'lineWidth': 1,\n      'strokeStyle': hexRgb(theme.second, { alpha: 1, format: 'css' })\n    }, radius + 17, 0, Math.PI * 2, true, x, y);\n  }, [createCircle, radius, theme, x, y]);\n\n  // days mayan\n  const createMayanDays = useCallback(async () => {\n    const temp: any[] = [];\n\n    for (let i = 0; i < 31; i++) {\n      const currentDate = i + 1;\n\n      await mayan.mayanGlyph(currentDate)\n        .then(\n          (glyphs: any) => {\n            const pos = {\n              x: (Math.cos(i * angle) * radius),\n              y: (Math.sin(i * angle) * radius)\n            };\n\n            temp.push({ angle, glyphs, day: currentDate, ...pos });\n          });\n    }\n\n    setItems(temp);\n  }, [angle, mayan, radius]);\n\n  // create days\n  const createDays = useCallback((ctx: CanvasRenderingContext2D) => {\n    for (let i = 0; i < 31; i++) {\n      const currentDate = i + 1;\n\n      const roman: any[] = Array.from(convertToRoman(currentDate));\n      const dayRoman: string = roman.reverse().join('').toString();\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.font = \"700 7px Roboto Slab\";\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = (day === (i + 1)) ? theme.main : theme.second;\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      new TextCircle(ctx, dayRoman, 0, 0, radius, (angle * i), undefined, true); // text\n      ctx.fill();\n      ctx.closePath();\n      ctx.restore();\n    }\n  }, [angle, convertToRoman, day, radius, theme]);\n\n  // use effect\n  useEffect(() => {\n    createMayanDays();\n  }, [createMayanDays]);\n\n  // render\n  return (\n    <Group\n      listening={false}\n      rotation={0}\n      offsetX={x}\n      offsetY={y}\n      x={x}\n      y={y}>\n      <Shape\n        listening={false}\n        sceneFunc={(ctx: Context) => createBackground(ctx)} />\n\n      <Spring\n        reset={animate}\n        from={{ value: 0 }}\n        to={{ value: angle / 2 }}>\n        {(props) => (\n          <a.Shape\n            listening={false}\n            sceneFunc={(ctx: Context) => borderLine(ctx, props.value.to((n: any) => n).get())}\n            {...props}>\n          </a.Shape>\n        )}\n      </Spring>\n\n      {lang.value === 'qu' ?\n        <Group\n          x={x}\n          y={y}>\n          {Array.isArray(items) && items.map((item: any, index: number) =>\n            <CalendarDaysItem\n              {...item}\n              active={(day - 1) === index}\n              radius={radius}\n              theme={theme}\n              key={index} />)}\n        </Group> :\n        <Group\n          x={x}\n          y={y}>\n          <Shape\n            listening={false}\n            sceneFunc={(ctx: any) => createDays(ctx)} />\n        </Group>}\n    </Group>\n  );\n};\n\nexport default CalendarDays;","// Hook\nfunction UseMoon() {\n  // get name\n  const getNamePhase = (phase: number): string => {\n    switch (phase) {\n      case 0: return \"moon.new_moon\";\n      case 1: return \"moon.waxing_crescent\";\n      case 2: return \"moon.quarter\";\n      case 3: return \"moon.waxing_gibbous\";\n      case 4: return \"moon.full\";\n      case 5: return \"moon.waning_gibbous\";\n      case 6: return \"moon.last_quarter\";\n      case 7: return \"moon.waning_crescent\";\n    }\n\n    return \"moon.new_moon\";\n  };\n  \n  // get moon fraction\n  const getMoonFraction = (year: number, month: number, day: number): number => {\n    const date = new Date(year, month, day);\n    const days_after_new_moon = (date.getTime() / 86400000) - 18256.8;\n    const synodic_month = 29.53059;\n    const m = Math.abs(days_after_new_moon / synodic_month);\n\n    return (m - Math.floor(m)); // fractional from 0 to 1 (ex).\n  };\n\n  // moon phase name\n  const getMoonPhaseName = (yearIn: number, monthIn: number, dayIn: number): string => {\n    let year = yearIn;\n    let month = monthIn;\n    let day = dayIn;\n\n    if (month < 3) {\n      year--;\n      month += 12;\n    }\n\n    ++month;\n\n    let jd: any;\n    let phase: any;\n\n    jd = 365.25 * year + 30.6 * month + day - 694039.09; // jd is total days elapsed\n    jd /= 29.53; // divide by the moon cycle (29.53 days)\n    phase = parseInt(jd, 10); // int(jd) -> phase, take integer part of jd\n    jd -= phase; // subtract integer part to leave fractional part of original jd\n    phase = Math.ceil(jd * 8); // scale fraction from 0-8 and round by adding 0.5\n    phase = phase & 7; // 0 and 8 are the same so turn 8 into 0\n\n    return getNamePhase(phase);\n  };\n\n  //normalize values to range 0...1\n  const normalize = (v: any) => {\n    v = v - Math.floor(v);\n\n    if (v < 0)\n      v = v + 1;\n\n    return v;\n  };\n\n  // get moon info\n  const getMoonInfo = (date: Date) => {\n    var age, // Moon's age\n      distance, // Moon's distance in earth radii\n      latitude, // Moon's ecliptic latitude\n      longitude, // Moon's ecliptic longitude\n      phase, // Moon's phase\n      trajectory, // Moon's trajectory\n      zodiac; // Moon's zodiac sign \n\n    var yy, mm, k1, k2, k3, jd;\n    var ip, dp, np, rp;\n\n    var year = date.getFullYear();\n    var month = date.getMonth()+1;\n    var day = date.getDate();\n\n\n    yy = year - Math.floor((12 - month) / 10);\n    mm = month + 9;\n    if (mm >= 12) {\n      mm = mm - 12;\n    }\n\n    k1 = Math.floor(365.25 * (yy + 4712));\n    k2 = Math.floor(30.6 * mm + 0.5);\n    k3 = Math.floor(Math.floor((yy / 100) + 49) * 0.75) - 38;\n\n    jd = k1 + k2 + day + 59;  // for dates in Julian calendar\n    if (jd > 2299160) {\n      jd = jd - k3;      // for Gregorian calendar\n    }\n\n    //calculate moon's age in days\n    ip = normalize((jd - 2451550.1) / 29.530588853);\n    age = ip * 29.53;\n\n    if (age <  1.84566) {\n      phase = 'NEW';\n      trajectory = 'ascendent';\n    } else if (age <  5.53699) {\n      phase = 'Waxing crescent';\n      trajectory = 'ascendent';\n    } else if (age <  9.22831) {\n      phase = 'First quarter';\n      trajectory = 'ascendent';\n    } else if (age < 12.91963) {\n      phase = 'Waxing gibbous';\n      trajectory = 'ascendent';\n    } else if (age < 16.61096) {\n      phase = 'FULL';\n      trajectory = 'descendent';\n    } else if (age < 20.30228) {\n      phase = 'Waning gibbous';\n      trajectory = 'descendent';\n    } else if (age < 23.99361) {\n      phase = 'Last quarter';\n      trajectory = 'descendent';\n    } else if (age < 27.68493) {\n      phase = 'Waning crescent';\n      trajectory = 'descendent';\n    } else {\n      phase = 'NEW';\n      trajectory = 'ascendent';\n    }\n\n    ip = ip * 2 * Math.PI;  //Convert phase to radians\n\n    // Calculate moon's distance\n    dp = 2 * Math.PI * normalize((jd - 2451562.2) / 27.55454988);\n    distance = 60.4 - 3.3 * Math.cos(dp) - 0.6 * Math.cos(2 * ip - dp) - 0.5 * Math.cos(2 * ip);\n\n    // Calculate moon's ecliptic latitude\n    np = 2 * Math.PI * normalize((jd - 2451565.2) / 27.212220817);\n    latitude = 5.1 * Math.sin(np);\n\n    // Calculate moon's ecliptic longitude\n    rp = normalize((jd - 2451555.8) / 27.321582241);\n    longitude = 360 * rp + 6.3 * Math.sin(dp) + 1.3 * Math.sin(2 * ip - dp) + 0.7 * Math.sin(2 * ip);\n\n    if (longitude <  33.18) {\n      zodiac = 'Pisces';\n    } else if (longitude <  51.16) {\n      zodiac = 'Aries';\n    } else if (longitude <  93.44) {\n      zodiac = 'Taurus';\n    } else if (longitude < 119.48) {\n      zodiac = 'Gemini';\n    } else if (longitude < 135.30) {\n      zodiac = 'Cancer';\n    } else if (longitude < 173.34) {\n      zodiac = 'Leo';\n    } else if (longitude < 224.17) {\n      zodiac = 'Virgo';\n    } else if (longitude < 242.57) {\n      zodiac = 'Libra';\n    } else if (longitude < 271.26) {\n      zodiac = 'Scorpio';\n    } else if (longitude < 302.49) {\n      zodiac = 'Sagittarius';\n    } else if (longitude < 311.72) {\n      zodiac = 'Capricorn';\n    } else if (longitude < 348.58) {\n      zodiac = 'Aquarius';\n    } else {\n      zodiac = 'Pisces';\n    }\n\n    return {\n      'date' : { 'year' : year, 'month' : month , 'day' : day},\n      'age' : age,\n      'distance' : distance * 6371,\n      'ecliptic' : {\n        'latitude' : latitude,\n        'longitude' : longitude\n      },\n      'phase' : phase,\n      'trajectory' : trajectory,\n      'constellation' : zodiac,\n    };\n  };\n\n  return {\n    getMoonFraction,\n    getMoonPhaseName,\n    getMoonInfo\n  };\n}\n\nexport default UseMoon;","import React, { FC, useCallback } from 'react';\nimport { animated as a, Spring } from '@react-spring/konva';\nimport { Circle } from 'react-konva';\nimport hexRgb from 'hex-rgb';\n\nimport { Shape as IShape } from 'konva/types/Shape';\nimport { Context } from 'konva/types/Context';\n\nimport UseMoon from '../../../uses/useMoon';\n\nimport { IMoonPhase } from './interfaces';\n\n// moon phase\nconst MoonPhase: FC<IMoonPhase> = ({\n  angle = 0,\n  active = true,\n  day,\n  delay = 200,\n  month,\n  size,\n  strokeWidth,\n  theme,\n  x,\n  y,\n  year,\n}) => {\n  const { getMoonFraction } = UseMoon(); // get moon fraction\n\n  // draw path\n  const drawPath = useCallback((ctx: Context, posX: number, posY: number, size: number) => {\n    const radius = Math.PI / 2;\n\n    ctx.beginPath();\n\t\tctx.arc(posX, posY, size, -radius, radius, true);\n\t\tctx.closePath();\n  }, []);\n\n  // draw line\n  const drawLine = useCallback((ctx: Context, color: string) => {\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(x, y -(size - 1));\n    ctx.lineTo(x, y + (size));\n    ctx.setAttr('strokeStyle', color);\n    ctx.setAttr('lineWidth', 1);\n    ctx.stroke();\n    ctx.closePath();\n    ctx.restore();\n  }, [ size, x, y ]);\n\n  // draw phase\n  const drawPhase = useCallback((ctx: Context, phase: number, shape: IShape) => {\n    drawPath(ctx, x, y, size);\n\t\tshape.setAttr('fill', theme.second);\n    ctx.fillShape(shape);\n\n\t\tctx.translate(x, y);\n\t\tctx.scale(phase, 1);\n\t\tctx.translate( -x, -y );\n\n    drawPath(ctx, x, y, size);\n    shape.setAttr('fill', phase > 0 ? theme.main : theme.second);\n\t\tctx.fillShape(shape);\n\n    drawLine(ctx, phase < 0.1 ? theme.second : theme.main);\n  }, [ drawLine, drawPath, size, theme, x, y ]);\n\n  // shadow moon\n  const shadowMoon = useCallback((ctx: Context, shape: IShape, phases: any) => {\n    const phase = phases.get();\n\n    if (phase <= 0.5) {\n      drawPhase(ctx, 4 * phase - 1, shape);\n    } else {\n      ctx.translate(x, y);\n\t\t\tctx.rotate(angle);\n\t\t\tctx.translate(-x, -y);\n\n      drawPhase(ctx, 4 * (1 - phase) - 1, shape);\n    }\n  }, [ angle, drawPhase, x, y ]);\n\n  // render\n  return (\n    <>\n      <Circle\n        fill={theme.main}\n        listening={false}\n        radius={size + 1} \n        stroke={hexRgb(theme.second, { alpha: 0.5, format: 'css' })}\n        strokeWidth={0.5}\n        x={x}\n        y={y} />\n\n      <Circle\n        fill={theme.main}\n        listening={active}\n        radius={size} \n        stroke={theme.main}\n        strokeWidth={strokeWidth}\n        x={x}\n        y={y} />\n\n      <Spring\n        delay={delay}\n        from={{ phase: 0 }}\n        to={{\n          phase: getMoonFraction(year, month, day)\n        }}>\n        {(props: any) => (\n          <a.Shape\n            {...props}\n            listening={false}\n            sceneFunc={(ctx: Context, shape: any) => shadowMoon(ctx, shape, props.phase.to((n: any) => n))}\n            fill={props.phase > 0 ? theme.second : theme.main }>\n          </a.Shape>)}\n      </Spring>\n    </>\n  );\n};\n\nexport default MoonPhase;","import { format, parse } from 'date-fns';\nimport React, { FC, useCallback } from 'react';\nimport { Circle, Group } from 'react-konva';\n\nimport MoonPhase from '../../Moon/MoonPhase';\n\nimport { IMonthDays } from './interfaces';\n\n// month days\nconst MonthDays: FC<IMonthDays> = ({\n  angle,\n  currentMonth,\n  day,\n  month,\n  lastDay,\n  radius,\n  setToday,\n  theme,\n  today\n}) => {\n  const form: string = 'yyyy-M-dd';\n  const active: boolean = day === today.getDate();\n\n  // pos\n  const pos: any = {\n    x: Math.cos(angle * (day - 1)) * radius || 0,\n    y: Math.sin(angle * (day - 1)) * radius || 0\n  };\n\n  // select day\n  const selectDay = useCallback((): number => {\n    if (currentMonth === false) return 2;\n\n    return active ? 1 : 2;\n  }, [ active, currentMonth ]);\n\n  // select\n  const selectDate = useCallback((day: number) => \n    setToday(parse(\n      format(new Date(`${today.getFullYear()}-${month}-${day}`), form), form, new Date())\n    ), [ month, setToday, today ]);\n\n  // render\n  return (\n    <Group\n      rotation={90}\n      offsetX={pos.x}\n      offsetY={pos.y}\n      listening={true}\n      onClick={() => selectDate(day)}\n      onTap={() => selectDate(day)}\n      {...pos}>\n      {(day === 1 || day === lastDay) &&\n        <Circle\n          listening={false}\n          fill={theme.main}\n          radius={7.5}\n          {...pos} /> }\n\n      {(day === today.getDate() && currentMonth) &&\n        <Circle\n          listening={false}\n          fill={theme.main}\n          stroke={theme.second}\n          strokeWidth={2}\n          radius={4}\n          {...pos} />}\n\n      <MoonPhase\n        day={day}\n        month={month}\n        size={3}\n        theme={theme}\n        strokeWidth={selectDay()}\n        year={today.getFullYear()}\n        {...pos} />\n    </Group>\n  );\n};\n\nexport default MonthDays;","import React, { FC, useCallback } from 'react';\n\nimport MonthDays from '../MonthDays';\n\nimport { IMonthContainer } from './interfaces';\n\n// month container\nconst MonthContainer: FC<IMonthContainer> = ({\n  angle,\n  currentMonth,\n  day,\n  month,\n  radius,\n  setToday,\n  theme,\n  today\n}) => {\n  // factory phases\n  const factoryPhases = useCallback((day: number) => {\n    const items = [];\n\n    for (let i = 0; i < day; i++) {\n      items.push({ dayMonth: i + 1 });\n    }\n\n    return items;\n  }, []);\n\n  const items = factoryPhases(day);\n\n  // render\n  return (\n    <>\n      {items.map(({ dayMonth }, index: number) =>\n        <MonthDays\n          angle={angle}\n          currentMonth={currentMonth}\n          day={dayMonth}\n          key={index}\n          month={month}\n          lastDay={items.length}\n          radius={radius}\n          setToday={setToday}\n          theme={theme}\n          today={today} />)} \n    </>\n  );\n};\n\nexport default MonthContainer;","import { Spring, animated as a } from '@react-spring/konva';\nimport { Context } from 'konva/types/Context';\nimport React, { FC, useCallback } from 'react';\nimport { Group, Shape } from 'react-konva';\n\nimport UseFormat from '../../../uses/useFormat';\n\nimport TextCircle from '../../Typography/TextCircle';\n\nimport { IMonthName } from './interfaces';\n\n// month radius name\nconst MonthName: FC<IMonthName> = ({\n  active,\n  angle,\n  day,\n  month,\n  radius,\n  theme,\n  text\n}) => {\n  const { toDegrees } = UseFormat(); // convert\n\n  // update name\n  const updateName = useCallback((day: number): number =>\n    ((day) * angle), [angle]);\n\n  // create circle\n  const createCircle = useCallback((ctx: Context, endAngle: number, color: string) => {\n    const initAngle = angle;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.setAttr('fillStyle', 'transparent');\n    ctx.setAttr('strokeStyle', color);\n    ctx.setAttr('lineWidth', 17);\n    ctx.arc(0, 0, radius, endAngle, initAngle, false);\n    ctx.fill();\n    ctx.stroke();\n    ctx.closePath();\n    ctx.restore();\n  }, [ angle, radius ]);\n\n  // create name\n  const createName = useCallback((ctx: CanvasRenderingContext2D) => {\n    ctx.font = \"7px Roboto Condensed\";\n    ctx.fillStyle = active ? theme.main : theme.second;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.scale(-1, 1);\n\n    new TextCircle(ctx, text, 0, 0, radius, -(Math.PI - (angle / 2)), undefined, true); // text\n  }, [active, angle, radius, theme, text]);\n\n  // get value\n  const getValue = useCallback((prop: any) =>\n    prop.to((n: any) => n).get(), []);\n\n  // render\n  return (\n    <Group\n      listening={false}\n      rotation={toDegrees(-(Math.PI * 2) - angle)}>\n      {active &&\n        <Spring\n          from={{ \n            color: theme.main,\n            endAngle: (Math.PI * 2)\n          }}\n          to={{\n            color: theme.second,\n            endAngle: updateName(day),\n            }}>\n          {(props: any) => (\n            <a.Shape\n              listening={false}\n              sceneFunc={(ctx: Context) => createCircle(ctx, getValue(props.endAngle), getValue(props.color))}\n              {...props}>\n            </a.Shape>)}\n        </Spring>}\n\n      <Shape\n        listening={false}\n        sceneFunc={(ctx: any) => createName(ctx)} />\n    </Group>\n  );\n};\n\nexport default MonthName;","import React, { FC, useCallback } from 'react';\n\nimport { Spring, animated as a } from '@react-spring/konva';\nimport { Circle } from 'react-konva';\nimport { Context } from 'konva/types/Context';\n\nimport hexRgb from 'hex-rgb';\n\nimport { IMonthPercent } from './interfaces';\n\n// month radius percent\nconst MonthPercent: FC<IMonthPercent> = ({\n  animate,\n  active,\n  angle,\n  day,\n  month,\n  radius,\n  theme,\n  today\n}) => {\n  // create mask\n  const maskLines = useCallback((ctx: Context, total: number) => {\n    if (active === true) {\n      const value = Math.abs(angle * (day - 1));\n\n      if (today.getMonth() > (month - 1)) {\n        ctx.arc(0, 0, radius, 0, value, false);\n      } else {\n        if (day === today.getDate()) {\n          ctx.arc(0, 0, radius, 0, total, false);\n        } else {\n          ctx.arc(0, 0, radius, value, total, false);\n        }\n      }\n    }\n  }, [active, angle, day, month, radius, today]);\n\n  // render\n  return (\n    <Spring\n      reset={animate}\n      config={{\n        duration: 900,\n      }}\n      from={{ total: 0 }}\n      to={{ total: Math.abs(angle * (today.getDate() - 1)) }}>\n      {(props: any) => (\n        <a.Group\n          clipFunc={(ctx: Context) => maskLines(ctx, props.total.to((n: any) => n).get())}\n          listening={false}\n          {...props}>\n          <Circle\n            dash={[2, 2]}\n            fill=\"transparent\"\n            listening={false}\n            radius={radius}\n            stroke={hexRgb(theme.second, { alpha: 1, format: 'css' })}\n            strokeWidth={1}\n            listen={false} />\n        </a.Group>)}\n    </Spring>\n  );\n};\n\nexport default MonthPercent;","import React, { FC } from 'react';\nimport { format } from 'date-fns';\nimport { useTranslation } from 'react-i18next';\nimport { Group } from 'react-konva';\n\nimport MonthContainer from './MonthContainer';\nimport MonthName from './MonthName';\nimport MonthPercent from './MonthPercent';\n\nimport UseFormat from '../../uses/useFormat';\n\nimport { IMonth } from './interfaces';\n\n// env\nconst { REACT_APP_TOTAL_ITEMS_DEGREE }: any = process.env;\n\n// month radius\nconst Month: FC<IMonth> = ({\n  animate,\n  month,\n  radius,\n  setToday,\n  today,\n  theme,\n  x,\n  y\n}) => {\n  const { t }: any = useTranslation();\n  const { fixDate, getActiveMonth } = UseFormat(); // fix date\n\n  const angle = (2 * Math.PI) / (REACT_APP_TOTAL_ITEMS_DEGREE); // angle\n  const current = fixDate(today.getFullYear(), month); // current\n\n  const { active, currentMonth, day }: any = getActiveMonth(today, current);\n\n  // month\n  return (\n    <Group\n      listening={!animate}\n      x={x}\n      y={y}>\n      <MonthPercent\n        animate={animate}\n        active={active}\n        angle={angle}\n        currentMonth={currentMonth}\n        day={day}\n        month={month}\n        theme={theme}\n        today={today}\n        radius={radius} />\n\n      <MonthName\n        active={active}\n        angle={angle}\n        day={day}\n        month={month}\n        radius={radius}\n        theme={theme}\n        text={t(`months.${format(current, 'MMM').toLowerCase()}`)} />\n\n      <MonthContainer\n        angle={angle}\n        currentMonth={currentMonth}\n        day={day}\n        month={month}\n        radius={radius}\n        setToday={setToday}\n        theme={theme}\n        today={today} />\n    </Group>\n  );\n};\n\nexport default Month;","import React, { FC } from 'react';\nimport { Circle } from 'react-konva';\n\nimport { IControlPosition } from './interfaces';\n\n// moon today background\nconst ControlPosition: FC<IControlPosition> = ({\n  radius,\n  theme,\n  x,\n  y\n}) => {\n  // render\n  return (\n    <Circle\n      fill=\"transparent\"\n      dash={[1, 2]}\n      listening={false}\n      radius={radius + 5}\n      stroke={theme.second}\n      strokeWidth={0.5}\n      x={x}\n      y={y} />\n  );\n};\n\nexport default ControlPosition;","import { Context } from 'konva/types/Context';\nimport React, { FC, useCallback } from 'react';\nimport { Shape, Rect } from 'react-konva';\n\nimport { IIconArrow } from './interfaces';\n\n// icon arrow\nconst IconArrow: FC<IIconArrow> = ({\n  color,\n  offsetX = 10,\n  offsetY = 30,\n  type,\n  x,\n  y\n}) => {\n  // line\n  const line = useCallback((ctx: Context, pos: any, line: any) => {\n    ctx.beginPath();\n    ctx.moveTo(pos.x, pos.y);\n    ctx.lineTo(line.x, line.y);\n    ctx.setAttr('strokeStyle', color);\n    ctx.setAttr('lineWidth', 1);\n    ctx.stroke();\n    ctx.closePath();\n  }, [ color ]);\n\n  // point\n  const point = useCallback((ctx: Context) => {\n    const offY = (offsetY + 5);\n    const PosX = (type === 'right') ? offY : -offY;\n\n    ctx.save();\n    ctx.arc(x - PosX, y + 3, 1, 0, Math.PI * 2, false);\n    ctx.setAttr('fillStyle', color);\n    ctx.fill();\n    ctx.restore();\n  }, [ color, offsetY, type, x, y ]);\n\n  // icon\n  const icon = useCallback((ctx: Context) => {\n    ctx.save();\n\n    if (type === 'right') {\n      ctx.translate(0, 3);\n      ctx.translate(x, y);\n      ctx.rotate(Math.PI);\n      ctx.translate(-x, -y);\n    } else {\n      ctx.translate(0, 3);\n    }\n    \n    line(ctx, { x, y }, { x: x + offsetX, y: y - offsetX });\n    line(ctx, { x: x + offsetY, y }, { x, y });\n    line(ctx, { x, y }, { x: x + offsetX, y: y + offsetX });\n\n    ctx.restore();\n\n    point(ctx);\n  }, [ line, offsetX, offsetY, point, type, x, y ]);\n\n  // render\n  return (\n    <>\n      <Rect\n        fill=\"transparent\"\n        height={offsetY}\n        scaleX={type === \"right\" ? -1 : 1}\n        x={x}\n        y={y - ((offsetY / 2) / 2)}\n        width={offsetY} />\n\n      <Shape\n        sceneFunc={(ctx: Context) => icon(ctx)} />\n    </>\n  );\n};\n\nexport default IconArrow;","import React, { FC } from 'react';\nimport { Text as TextKonva } from 'react-konva';\n\n// text\nconst Text: FC<any> = (props) => {\n  // render\n  return (\n    <TextKonva\n      align=\"center\"\n      fontFamily=\"Roboto Condensed\"\n      listening={false}\n      {...props} />\n  );\n};\n\nexport default Text;","import React, { FC, useCallback, useMemo, useState, useEffect } from 'react';\nimport { Group } from 'react-konva';\n\nimport IconArrow from '../../Icons/IconArrow';\nimport Text from '../../Typography/Text';\n\nimport MayanNumber from '../../../helpers/mayanNumber';\nimport UseFormat from '../../../uses/useFormat';\n\nimport { IButtonArrow } from './interfaces';\n\n// button arrow\nconst ButtonArrow: FC<IButtonArrow> = ({\n  color,\n  lang,\n  onClick,\n  text,\n  type,\n  x,\n  y\n}) => {\n  const offSet: number = 30;\n  const width: number = 45;\n\n  const { convertToRoman } = UseFormat();\n  const [ numbText, setNumbText ] = useState<any>();\n\n  const mayan = useMemo(() => new MayanNumber(), []);\n\n  // get number\n  const getNumberMayan = useCallback(async (value: any) =>\n    await mayan.mayanGlyph(value).then(e => e.join('\\n')), [ mayan ]);\n\n  // get number\n  const getNumber = useCallback(async (value: any) => {\n    if (lang.value === 'en') {\n      return convertToRoman(parseInt(value)).toString();\n    }\n\n    return await getNumberMayan(parseInt(value));\n  }, [ convertToRoman, getNumberMayan, lang ]);\n\n  // use effect\n  useEffect(() => {\n    const translate = async() => {\n      if (!text) {\n        setNumbText(text);\n      } else {\n        getNumber(text).then(e => setNumbText(e));\n      }\n    };\n    \n    translate();\n  }, [ getNumber, text ]);\n\n  // return\n  return (\n    <Group\n      onTap={onClick}\n      onClick={onClick}\n      y={4}>\n      <IconArrow\n        color={color}\n        offsetX={5}\n        offsetY={15}\n        type={type}\n        x={x}\n        y={y} />\n\n      {text && <Text\n        align=\"center\"\n        fill={color}\n        fontFamily={lang.value === 'en' ? 'Roboto Slab' : 'MayanNumerals'}\n        fontSize={lang.value === 'en' ? 8 : 10}\n        offsetX={type === \"right\" ? width : 0 }\n        verticalAlign=\"middle\"\n        text={numbText}\n        x={x + (type === 'right' ? -offSet : offSet)}\n        y={lang.value === 'en' ? y - 1 : y - 15}\n        width={width} />}\n    </Group>\n  );\n};\n\nexport default ButtonArrow;","import React, { FC, useCallback } from 'react';\n\nimport ButtonArrow from '../../../Form/ButtonArrow';\n\nimport { IMoonTodayControls } from './interfaces';\n\n// moon today controls\nconst MoonTodayControls: FC<IMoonTodayControls> = ({\n  lang,\n  setYear,\n  theme,\n  x,\n  y,\n  year,\n}) => {\n  // on change\n  const onChange = useCallback((year: number) =>\n    setYear(new Date(`${year}/1/1`)), [ setYear ]);\n\n  // render\n  return (\n    <>\n      <ButtonArrow\n        color={theme.second}\n        lang={lang}\n        onClick={() => onChange(year-1)}\n        type=\"left\"\n        x={x - 70}\n        y={y - 6} />\n\n      <ButtonArrow\n        color={theme.second}\n        lang={lang}\n        onClick={() => onChange(year+1)}\n        type=\"right\"\n        x={x + 70}\n        y={y - 6} />\n    </>\n  );\n};\n\nexport default MoonTodayControls;","import React, { FC, useEffect, useMemo, useState } from 'react';\nimport MayanNumber from '../../../../../helpers/mayanNumber';\nimport { Text as TextKonva } from 'react-konva';\n\nimport Text from '../../../../Typography/Text';\n\nimport UseFormat from '../../../../../uses/useFormat';\n\nimport { IMoonTodayInfoLabel } from './interfaces';\n\n// moon today info year\nconst MoonTodayInfoLabel: FC<IMoonTodayInfoLabel> = ({\n  offSetY,\n  lang,\n  label,\n  theme,\n  value,\n  x,\n  y\n}) => {\n  const mayan = useMemo(() => new MayanNumber(), []);\n  const [ symbol, setSymbol ] = useState<any>();\n  const { convertToRoman }: any = UseFormat();\n\n  // use effect\n  useEffect(() => {\n    const getNumber = async () => {\n      await mayan.mayanGlyph(value)\n        .then((glyphs: any) => {\n          if (lang.value === 'qu')\n            setSymbol(glyphs);\n          else\n            setSymbol(convertToRoman(value));\n        });\n    }\n\n    getNumber();\n  }, [ convertToRoman, lang, mayan, value ]);\n\n  // render\n  return (\n    <>\n      <Text\n        fill={theme.second}\n        fontSize={8}\n        width={140}\n        x={x - (140 / 2)}\n        y={y + offSetY}\n        text={label} />\n\n      {lang.value === 'qu' ?\n        <TextKonva\n          listening={false}\n          fontSize={10}\n          fontFamily=\"MayanNumerals\"\n          verticalAlign=\"bottom\"\n          fill={theme.second}\n          fontStyle=\"bold\"\n          text={Array.isArray(symbol) ? symbol.join('\\n') : ''}\n          height={30}\n          width={20}\n          wrap=\"word\"\n          x={x - 5}\n          y={y + (offSetY - 5)} />\n        : <Text\n            fill={theme.second}\n            fontFamily=\"Roboto Slab\"\n            align=\"center\"\n            fontSize={8}\n            text={symbol}\n            verticalAlign=\"middle\"\n            height={30}\n            width={40}\n            x={x - 20}\n            y={y + (offSetY + 5)} />}\n    </>\n  );\n};\n\nexport default MoonTodayInfoLabel;","import { compareAsc, format, parse } from 'date-fns';\nimport React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Text from '../../../../Typography/Text';\n\nimport { IMoonTodayInfoTop } from './interfaces';\n\n// moon today info top\nconst MoonTodayInfoTop: FC<IMoonTodayInfoTop> = ({\n  date,\n  theme,\n  x,\n  y\n}) => {\n  const { t }: any = useTranslation();\n  \n  const offSetY = 75;\n\n  // today\n  const today: number = compareAsc(date,\n    parse(format(new Date(), 'yyyy/M/dd'), 'yyyy/M/dd', new Date()));\n\n  // render\n  return (\n    <>\n      <Text\n        fill={theme.second}\n        fontSize={8}\n        text={today === 0 ? t('week.today') : t('week.day')}\n        width={90} \n        x={x - (90 / 2)}\n        y={y - offSetY} />\n\n      <Text\n        fill={theme.second}\n        fontSize={11}\n        fontStyle=\"normal\"\n        text={t(`week.${format(date, 'EEE').toLowerCase()}`)}\n        width={120} \n        x={x - (120 / 2)}\n        y={y - (offSetY - 10)} /> \n    </>\n  );\n};\n\nexport default MoonTodayInfoTop;","import format from 'date-fns/format';\nimport React, { FC, useEffect, useMemo, useState } from 'react';\nimport { Text as TextKonva } from 'react-konva';\nimport { useTranslation } from 'react-i18next';\n\nimport UseMoon from '../../../../../uses/useMoon';\n\nimport MayanNumber from '../../../../../helpers/mayanNumber';\nimport Text from '../../../../Typography/Text';\n\nimport { IMoonTodayInfoYear } from './interfaces';\nimport UseFormat from '../../../../../uses/useFormat';\n\n// moon today info year\nconst MoonTodayInfoYear: FC<IMoonTodayInfoYear> = ({\n  lang,\n  theme,\n  today,\n  x,\n  y\n}) => {\n  const { t }: any = useTranslation();\n  const { getMoonPhaseName }: any = UseMoon();\n  const { convertToRoman }: any = UseFormat();\n\n  const moonPhase = getMoonPhaseName(today.getFullYear(), today.getMonth(), today.getDate());\n  const mayan = useMemo(() => new MayanNumber(), []);\n  const offSetY: number = 60; // y\n\n  const [ year, setYear ] = useState<any>();\n\n  // use effect\n  useEffect(() => {\n    const getNumber = async () => {\n      const value = parseInt(format(today, 'yyyy'));\n\n      await mayan.mayanGlyph(value)\n        .then((glyphs: any) => {\n          if (lang.value === 'qu')\n            setYear(glyphs);\n          else\n            setYear(convertToRoman(value));\n        });\n    }\n\n    getNumber();\n  }, [ convertToRoman, lang, mayan, today ]);\n\n  // render\n  return (\n    <>\n      <Text\n        fill={theme.second}\n        fontSize={8}\n        text={t(moonPhase)}\n        x={x - (140 / 2)}\n        y={y + offSetY}\n        width={140} /> \n\n      {lang.value === 'qu' ? <TextKonva\n        fontSize={10}\n        fontFamily=\"MayanNumerals\"\n        fill={theme.second}\n        fontStyle=\"bold\"\n        verticalAlign=\"bottom\"\n        text={Array.isArray(year) ? year.join('\\n') : ''}\n        height={30}\n        width={20}\n        wrap=\"word\"\n        x={x - 5}\n        y={y + (offSetY + 7)} />\n      : <Text\n          fill={theme.second}\n          align=\"center\"\n          fontFamily=\"Roboto Slab\"\n          fontSize={8}\n          text={year}\n          verticalAlign=\"middle\"\n          height={30}\n          width={50}\n          x={x - 25}\n          y={y + (offSetY + 5)} />}\n    </>\n  );\n};\n\nexport default MoonTodayInfoYear;","import format from 'date-fns/format';\nimport React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport MoonTodayInfoLabel from './MoonTodayInfoLabel';\nimport MoonTodayInfoTop from './MoonTodayInfoTop';\nimport MoonTodayInfoYear from './MoonTodayInfoYear';\n\nimport { IMoonTodayInfo } from './interfaces';\n\n// moon today info\nconst MoonTodayInfo: FC<IMoonTodayInfo> = ({\n  lang,\n  theme,\n  today,\n  x,\n  y\n}) => {\n  const { t }: any = useTranslation();\n\n  // render\n  return (\n    <>\n      <MoonTodayInfoTop\n        date={today}\n        theme={theme}\n        x={x}\n        y={y} />\n\n      <MoonTodayInfoLabel\n        lang={lang}\n        theme={theme}\n        offSetY={30}\n        x={x - 55}\n        label={t('date.day')}\n        value={parseInt(format(today, 'dd'))}\n        y={y} />\n      \n      <MoonTodayInfoLabel\n        lang={lang}\n        theme={theme}\n        offSetY={30}\n        x={x + 55}\n        label={t('date.month')}\n        value={parseInt(format(today, 'M'))}\n        y={y} />\n\n      <MoonTodayInfoYear\n        lang={lang}\n        theme={theme}\n        today={today}\n        x={x}\n        y={y} />\n    </>\n  );\n};\n\nexport default MoonTodayInfo;","import React, { FC } from 'react';\nimport { Group } from 'react-konva';\n\nimport ControlPosition from '../../ControlPosition';\nimport MoonPhase from '../MoonPhase';\nimport MoonTodayControls from './MoonTodayControls';\nimport MoonTodayInfo from './MoonTodayInfo';\n\nimport { IMoonToday } from './interfaces';\n\n// moon today\nconst MoonToday: FC<IMoonToday> = ({\n  animate,\n  lang,\n  radius,\n  setToday,\n  theme,\n  today,\n  x,\n  y\n}) => {\n  // render\n  return (\n    <Group\n      listening={!animate}\n      rotation={90}\n      offsetX={x}\n      offsetY={y}\n      x={x}\n      y={y}>\n      <MoonTodayInfo\n        lang={lang}\n        theme={theme}\n        today={today}\n        x={x}\n        y={y} />\n\n      <MoonPhase\n        active={false}\n        day={today.getDate()}\n        delay={900}\n        month={today.getMonth()}\n        size={32}\n        strokeWidth={1}\n        theme={theme}\n        x={x}\n        y={y}\n        year={today.getFullYear()} />\n\n      <MoonTodayControls\n        lang={lang}\n        setYear={setToday}\n        theme={theme}\n        x={x}\n        y={y}\n        year={today.getFullYear()} />\n\n      <ControlPosition\n        radius={radius}\n        theme={theme}\n        x={x}\n        y={y} />\n    </Group>\n  );\n};\n\nexport default MoonToday;","import React, { FC, useCallback } from 'react';\nimport { Group } from 'react-konva';\n\nimport ButtonArrow from '../Form/ButtonArrow';\n\nimport { IYearControls } from './interfaces';\n\n// year controls\nconst YearControls: FC<IYearControls> = ({\n  lang,\n  theme,\n  radius,\n  year,\n  setYear,\n  x,\n  y\n}) => {\n  const offSetX = 140;\n\n  // on change\n  const onChange = useCallback((year: number) =>\n    setYear(new Date(`${year}/1/1`)), [ setYear ]);\n\n  // render\n  return (\n    <Group\n      rotation={90}\n      offsetX={x}\n      offsetY={y}\n      x={x}\n      y={y}>\n      <ButtonArrow\n        color={theme.second}\n        lang={lang}\n        onClick={() => onChange(year-1)}\n        text={(year - 1).toString()}\n        type=\"left\"\n        x={x - (radius + offSetX)}\n        y={y - 5} />\n\n      <ButtonArrow\n        color={theme.second}\n        lang={lang}\n        onClick={() => onChange(year+1)}\n        text={(year + 1).toString()}\n        type=\"right\"\n        x={x + (radius + offSetX)}\n        y={y - 5} />\n    </Group>\n  );\n};\n\nexport default YearControls;","import React, { FC, useCallback } from 'react';\nimport { Layer } from 'react-konva';\n\nimport CalendarDays from './CalendarDays';\nimport Month from '../Month';\nimport MoonToday from '../Moon/MoonToday';\nimport YearControls from '../YearControls';\n\nimport UseFormat from '../../uses/useFormat';\n\nimport { ICalendar } from './interfaces';\n\n// env\nconst { REACT_APP_TOTAL_ITEMS_DEGREE }: any = process.env;\n\n// calendar\nconst Calendar: FC<ICalendar> = ({\n  animate,\n  lang,\n  radius,\n  scale,\n  pos,\n  size,\n  setToday,\n  theme,\n  today,\n}) => {\n  const increment = radius * 0.16;\n  const { toRadians } = UseFormat(); // format funcs\n\n  const angle: number = toRadians(360 / REACT_APP_TOTAL_ITEMS_DEGREE);\n  const rotate: number = -(((today.getDate() - 1) / REACT_APP_TOTAL_ITEMS_DEGREE) * 360) - 90;\n\n  // create months\n  const createMonths = useCallback(() => {\n    const months = [];\n    const total: number = 12;\n\n    for (let i = 1; i <= total; i++) {\n      months.push(<Month\n        animate={animate}\n        month={i}\n        radius={radius + (i * increment)}\n        size={size}\n        today={today}\n        theme={theme}\n        setToday={setToday}\n        {...pos}\n        key={i} />);\n    }\n\n    return months;\n  }, [ animate, increment, radius, pos, size, setToday, theme, today]);\n\n  // render\n  return (\n    <Layer\n      rotation={-90}\n      scale={{ x: scale, y: scale }}\n      offsetX={(size.width / 2)}\n      offsetY={size.height / 2}\n      {...pos}>\n      <YearControls\n        lang={lang}\n        theme={theme}\n        radius={radius + (13 * increment)}\n        setYear={setToday}\n        year={today.getFullYear()}\n        {...pos} />\n\n      {createMonths()}\n\n      <MoonToday\n        animate={animate}\n        lang={lang}\n        radius={radius}\n        setToday={setToday}\n        theme={theme}\n        today={today}\n        {...pos} />\n\n      <CalendarDays\n        angle={angle}\n        animate={animate}\n        day={today.getDate()}\n        lang={lang}\n        rotate={rotate}\n        radius={radius + (14 * increment)}\n        theme={theme}\n        {...pos} />\n    </Layer>\n  );\n};\n\nexport default Calendar;","import styled from 'styled-components';\n\nconst InputRangeLabel = styled.label`\n  display: block;\n  width: auto;\n\n  .input-range {\n    &--slider {\n      appearance: none;\n      background-color: transparent;\n      height: 10px;\n      float: left;\n      opacity: 1;\n      position: relative;\n      transition: opacity .2s;\n      width: 80px;\n  \n      &:before,\n      &:after {\n        background-color: ${({ theme }) => theme.second};\n        content: '';\n        position: absolute;\n      }\n  \n      &:after {\n        height: 1px;\n        left: 4px;\n        top: 50%;\n        transform: translate3d(0, -50%, 0);\n        width: 100%;\n      }\n  \n      &::-webkit-slider-thumb {\n        appearance: none;\n        background: ${({ theme }) => theme.second};\n        border-radius: 100%;\n        cursor: pointer;\n        height: 8px;\n        width: 8px;\n      }\n    }\n  }\n`;\n\nconst InputRangeSpan = styled.span`\n  color: ${({ theme }) => theme.second};\n  float: left;\n  font-size: 11px;\n  font-weight: 300;\n  margin: 0 10px 0 0;\n  width: auto;\n`;\n\nexport {\n  InputRangeLabel,\n  InputRangeSpan\n}","import React, { FC, SyntheticEvent, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { IInputRange } from './interfaces';\n\nimport { InputRangeLabel, InputRangeSpan } from './styles';\n\n// input range\nconst InputRange: FC<IInputRange> = (props) => {\n  const { t }: any = useTranslation();\n  const { label, set, min, max, value } = props;\n\n  // change\n  const onChange = useCallback((event: SyntheticEvent<EventTarget>) => {\n    const value = (event.target as HTMLInputElement).value;\n\n    set(parseInt(value));\n  }, [ set ]);\n\n  // render\n  return (\n    <InputRangeLabel>\n      <InputRangeSpan>{t(label)}</InputRangeSpan>\n\n      <input\n        className=\"input-range--slider\"\n        min={min}\n        max={max}\n        onChange={onChange} \n        type=\"range\"\n        value={value} />\n    </InputRangeLabel>\n  );\n};\n\nexport default InputRange;","import styled from 'styled-components';\n\nconst InputSwitchLabel = styled.label`\n  display: block;\n  height: 8px;\n  pointer-events: auto;\n  position: relative;\n  width: auto;\n\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst InputSwitchSpan = styled.span`\n  color: ${({ theme }) => theme.second};\n  float: left;\n  font-size: 11px;\n  font-weight: 300;\n\n  &:first-child {\n    margin-right: 10px;\n  }\n\n  &:last-of-type {\n    margin-left: 10px;\n  }\n`;\n\nconst InputSwitchSlider = styled.div`\n  height: 8px;\n  float: left;\n  pointer-events: auto;\n  position: relative;\n  top: 3px;\n  width: 20px;\n\n  .slider {\n    background-color: transparent;\n    bottom: 0;\n    cursor: pointer;\n    left: 0;\n    right: 0;\n    position: absolute;\n    top: 0;\n    transition: 0.250s;\n    width: 100%;\n  \n    &:before,\n    &:after {\n      background-color: ${({ theme }) => theme.second};\n      content: '';\n      position: absolute;\n    }\n  \n    &:before {\n      border-radius: 100%;\n      bottom: 0;\n      height: 8px;\n      left: 0;\n      transition: .4s;\n      width: 8px;\n    }\n  \n    &:after {\n      height: 1px;\n      left: 4px;\n      top: 50%;\n      transform: translate3d(0, -50%, 0);\n      width: calc(100% - 8px);\n    }\n  }\n  \n  input:checked + .slider:before {\n    transform: translateX(12px);\n  }\n`\n\nexport {\n  InputSwitchLabel,\n  InputSwitchSpan,\n  InputSwitchSlider\n}","import React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { IInputSwitch } from './interfaces';\n\nimport { InputSwitchLabel, InputSwitchSpan, InputSwitchSlider } from './styles';\n\n// input switch\nconst InputSwitch: FC<IInputSwitch> = ({\n  labelL,\n  labelR,\n  name,\n  onChange,\n  value\n}) => {\n  const { t }: any = useTranslation();\n\n  // render\n  return (\n    <InputSwitchLabel>\n      <InputSwitchSpan>{t(labelL)}</InputSwitchSpan>\n      <InputSwitchSlider>\n        <input\n          name={name}\n          onChange={() => onChange(value)}\n          type=\"checkbox\" />\n        <span className=\"slider\"></span>\n      </InputSwitchSlider>\n      <InputSwitchSpan>{t(labelR)}</InputSwitchSpan>\n    </InputSwitchLabel>\n  );\n};\n\nexport default InputSwitch;","import styled from 'styled-components';\n\nconst LangSelectDiv = styled.div`\n  float: left;\n`;\n\nexport {\n  LangSelectDiv\n}","import React, { FC, useCallback } from 'react';\n\nimport InputSwitch from '../Form/InputSwitch';\n\nimport { ILangSelect } from './interfaces';\n\nimport { LangSelectDiv } from './styles';\n\n// lang select\nconst LangSelect: FC<ILangSelect> = ({\n  lang,\n  langs,\n  setLang\n}) => {\n  // on select lang\n  const onSelectLang = useCallback(() => {\n    const value = lang.value === langs[0].value ? langs[1] : langs[0];\n    \n    setLang(value);\n  }, [ lang, langs, setLang ]);\n\n  // render\n  return (\n    <LangSelectDiv>\n      <InputSwitch\n        labelL={langs[0].name}\n        labelR={langs[1].name}\n        name=\"lang\"\n        value={lang?.value}\n        onChange={onSelectLang} />\n    </LangSelectDiv>\n  );\n};\n\nexport default LangSelect;","import styled from 'styled-components';\n\nconst HeaderDateDiv = styled.div`\n  bottom: 10px;\n  left: 50%;\n  position: fixed;\n  transform: translate(-50%, 0);\n  z-index: 2;\n\n  .react-datepicker {\n    background-color: ${({ theme }: any) => theme.second};\n    border: none;\n    border-radius: 0px;\n\n    &__input-container {\n      border: none;\n      border-bottom: 1px solid;\n      border-color: ${({ theme }: any) => theme.second};\n\n      input {\n        background: transparent;\n        border: none;\n        cursor: pointer;\n        color: ${({ theme }: any) => theme.second};\n        font-size: 10px;\n        font-family: 'Roboto Condensed', 'sans-serif';\n        outline: none;\n        text-align: center;\n      }\n    }\n\n    &__current-month {\n      color: ${({ theme }: any) => theme.main};\n      font-size: 14px;\n      font-family: 'Roboto Condensed', 'sans-serif';\n      font-weight: 400;\n    } \n\n    &__day {\n      font-size: 10px;\n      font-family: 'Roboto Condensed', 'sans-serif';\n      color: ${({ theme }: any) => theme.main};\n    }\n\n    &__day-names {\n      font-size: 10px;\n      font-family: 'Roboto Condensed', 'sans-serif';\n    }\n    \n    &__day-name,\n    &__time-name {\n      color: ${({ theme }: any) => theme.main};\n      font-size: 10px;\n    }\n\n    &__header {\n      background-color: transparent;\n      border-bottom: 1px solid ${({ theme }: any) => theme.main};\n    }\n\n    &__month-container {\n      background-color: transparent;\n    }\n\n    &-popper {\n      transform: translate(-50%, -20px) !important;\n      left: 50% !important;\n    }\n\n    &__tab-loop {\n      left: 50%;\n      position: absolute;\n      transform: translate(-50%, 0);\n      top: 0;\n      width: 100%;\n    }\n\n    &__triangle {\n      display: none;\n    }\n\n    .react-datepicker__day--selected,\n    .react-datepicker__day--in-selecting-range,\n    .react-datepicker__day--in-range,\n    .react-datepicker__month-text--selected,\n    .react-datepicker__month-text--in-selecting-range,\n    .react-datepicker__month-text--in-range,\n    .react-datepicker__quarter-text--selected,\n    .react-datepicker__quarter-text--in-selecting-range,\n    .react-datepicker__quarter-text--in-range,\n    .react-datepicker__year-text--selected,\n    .react-datepicker__year-text--in-selecting-range,\n    .react-datepicker__year-text--in-range {\n      background-color: ${({ theme }: any) => theme.main};\n      border-radius: 0;\n      color: ${({ theme }: any) => theme.second};\n      font-weight: normal;\n    }\n\n    .react-datepicker__day:hover,\n    .react-datepicker__month-text:hover,\n    .react-datepicker__quarter-text:hover,\n    .react-datepicker__year-text:hover {\n      background-color: ${({ theme }: any) => theme.main};\n      border-radius: 0;\n      color: ${({ theme }: any) => theme.second};\n    }\n\n    .react-datepicker__navigation-icon::before,\n    .react-datepicker__year-read-view--down-arrow,\n    .react-datepicker__month-read-view--down-arrow,\n    .react-datepicker__month-year-read-view--down-arrow {\n      border-color: ${({ theme }: any) => theme.main};\n      border-width: 1px 1px 0 0;\n      height: 7px;\n      width: 7px;\n    }\n\n    .react-datepicker__day--keyboard-selected,\n    .react-datepicker__month-text--keyboard-selected,\n    .react-datepicker__quarter-text--keyboard-selected,\n    .react-datepicker__year-text--keyboard-selected {\n      background-color: transparent;\n      color: ${({ theme }: any) => theme.main};\n\n      &:before {\n        background-color: transparent;\n        border: 1px solid ${({ theme }: any) => theme.main};\n        content: '';\n        height: calc(100% - 2px);\n        left: -1px;\n        opacity: 0.9;\n        position: absolute;\n        top: 0;\n        width: calc(100% - 1px);\n      }\n    }\n\n    .react-datepicker__day--outside-month {\n      opacity: 0.4;\n    }\n  }\n`;\n\nconst HeaderHeader = styled.header`\n  background-color: transparent;\n  left: 0;\n  padding: 10px;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 22;\n\n  .filter {\n    float: left;\n    width: 50%;\n\n    &--date {\n      left: 50%;\n      position: absolute;\n      top: 10px;\n      transform: translate(-50%, 0);\n    }\n\n    &--item {\n      float: left;\n      margin: 0 0 10px;\n      width: 100%;\n\n      &.slider {\n        > label {\n          float: right;\n        }\n      }\n    }\n\n    .input-range {\n      float: right;\n    }\n  }\n`;\n\nconst HeaderMoonDiv = styled.div`\n  left: 50%;\n  position: absolute;\n  transform: translate(-50%, 0);\n  top: 0;\n\n  .title {\n    color: ${({ theme }) => theme.second};\n    font-family: Roboto Slab;\n    font-size: 10px;\n    margin: 10px 0;\n    text-transform: uppercase;\n  }\n`;\n\nexport {\n  HeaderDateDiv,\n  HeaderHeader,\n  HeaderMoonDiv\n}","import React, { FC, useCallback, useState } from 'react';\nimport InputRange from '../../components/Form/InputRange';\nimport DatePicker from 'react-datepicker';\n\nimport InputSwitch from '../../components/Form/InputSwitch';\nimport LangSelect from '../../components/LangSelect';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { HeaderDateDiv, HeaderHeader, HeaderMoonDiv } from './styles';\n\n// header\nconst Header: FC<any> = ({\n  date,\n  lang,\n  langs,\n  setLang,\n  scale,\n  setDate,\n  setScale,\n  radius,\n  setRadius,\n  setColors\n}) => {\n  const [ color, setColor ] = useState<boolean>(true);\n\n  // on theme change\n  const onThemeChange = useCallback((value: any) => {\n    if (value === false) {\n      setColors('#303336', '#EADDC1');\n    } else {\n      setColors('#2C4C9C', '#F2F3F5');\n    }\n\n    setColor(!value);\n  }, [setColors]);\n\n  // on scale\n  const onScale = useCallback((value: number) =>\n    setScale(value / 100), [setScale]);\n\n  // render\n  return (\n    <HeaderHeader>\n      <div className=\"filter\">\n        <div className=\"filter--item\">\n          <InputSwitch\n            labelL=\"theme.dark\"\n            labelR=\"theme.light\"\n            name=\"color\"\n            value={color}\n            onChange={onThemeChange} />\n        </div>\n\n        <div className=\"filter--item\">\n          <LangSelect\n            lang={lang}\n            langs={langs}\n            setLang={setLang} />\n        </div>\n      </div>\n\n      <HeaderMoonDiv>\n        <p className=\"title\">Moon</p>\n      </HeaderMoonDiv>\n\n      <HeaderDateDiv>\n        <DatePicker selected={date} onChange={(date: any) => setDate(date)} />\n      </HeaderDateDiv>\n\n      <div className=\"filter\">\n        <div className=\"filter--item slider\">\n          <InputRange\n            label=\"form.radius\"\n            min={110}\n            max={400}\n            set={setRadius}\n            value={radius} />\n        </div>\n\n        <div className=\"filter--item slider\">\n          <InputRange\n            label=\"form.scale\"\n            min={30}\n            max={200}\n            set={onScale}\n            value={scale * 100} />\n        </div>\n      </div>\n    </HeaderHeader>\n  );\n};\n\nexport default Header;","import styled from 'styled-components';\n\nconst FooterFooter = styled.footer`\n  bottom: 0;\n  left: 0;\n  padding: 10px 5px;\n  position: fixed;\n  width: 100%;\n\n  button {\n    background-color: transparent;\n    border: none;\n    color: ${({ theme }: any) => theme.second};\n    font-family: 'Roboto Condensed';\n    font-size: 10px;\n    font-weight: 300;\n    float: right;\n  }\n`;\n\nexport {\n  FooterFooter\n}","import React, { FC, useCallback } from 'react';\n\nimport { IFooter } from './interfaces';\n\nimport { FooterFooter } from './styles';\n\n// footer\nconst Footer: FC<IFooter> = () => {\n  // redirect\n  const redirect = useCallback(() => {\n    window.open('mailto:yeissonibarra@gmail.com', '_blank');\n  }, []);\n\n  // render\n  return (\n    <FooterFooter\n      className=\"footer\">\n      <button onClick={redirect}>\n        <span>@Julian Ibarra</span>\n      </button>\n    </FooterFooter>\n  );\n};\n\nexport default Footer;","import { useEffect, useState } from \"react\";\n\n// Hook\nfunction UseWindowSize() {\n  const [windowSize, setWindowSize]: any = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  // use effect\n  useEffect(() => {\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    \n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowSize;\n};\n\nexport default UseWindowSize;","import React, { createContext, FC, useCallback, useEffect, useState } from 'react';\nimport { format, parse } from 'date-fns';\nimport WebFontLoader from \"webfontloader\";\n\nimport UseWindowSize from '../../uses/useWindowSize';\n\nimport { IMainContext, IMainProvider } from './interfaces';\n\n// main context\nconst MainContext = createContext({} as IMainContext);\n\n// main provider\nconst MainProvider: FC<IMainProvider> = ({ children }) => {\n  const form: string = 'yyyy/M/dd';\n  const size = UseWindowSize();\n  \n  const [ animate, setAnimate ] = useState<boolean>(true);\n  const [ date, set ] = useState<any>(parse(format(new Date(), form), form, new Date()));\n  const [ loaded, setLoaded ] = useState<boolean>(false);\n  const [ radius, setRadius ] = useState<number>(110);\n  const [ pos, setPos ] = useState<any>({ x: window.innerWidth / 2, y: window.innerHeight / 2 });\n  const [ scale, setScale ] = useState<number>(0.9);\n\n  // set date\n  const setDate = useCallback((value: Date) =>\n    set(parse(format(value, form), form, new Date())), []);\n\n  // Handle loading effects.\n  useEffect(() => {\n    // Fetch necessary fonts.\n    WebFontLoader.load({\n      google: {\n        families: [\n          \"Roboto Condensed:300,400,700\",\n          \"Roboto Slab:300,400,500,600\"\n        ]\n      }, fontactive: () => {\n        setTimeout(() => setLoaded(true), 500);\n      }\n    });\n  }, []);\n\n  // render\n  return (\n    <MainContext.Provider\n      value={{\n        animate,\n        setAnimate,\n        date,\n        loaded,\n        radius,\n        setRadius,\n        setDate,\n        scale,\n        setScale,\n        size,\n        pos,\n        setPos\n      }}>\n      {children}\n    </MainContext.Provider>\n  );\n};\n\nexport { MainContext, MainProvider };\nexport default MainProvider;","import React, { FC, useState, createContext, useEffect} from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { ILang, ILangContext, ILangProvider } from './interfaces';\n\n// lang context\nconst LangContext = createContext({} as ILangContext);\n\n// lang provider\nconst LangProvider: FC<ILangProvider> = ({\n  children\n}) => {\n  const langs: any[] = [{\n    name: 'Quechua',\n    value: 'qu'\n  }, {\n    name: 'Gregorian',\n    value: 'en'\n  }];\n\n  const { i18n } = useTranslation();\n  const [ lang, setLang ] = useState<ILang>(langs[0]); // lang\n\n  // use effect\n  useEffect(() => {\n    i18n.changeLanguage(lang?.value);\n  }, [ lang, i18n ]);\n\n  // render\n  return (\n    <LangContext.Provider\n      value={{\n        lang,\n        langs,\n        setLang\n      }}>\n      {children}\n    </LangContext.Provider>\n  );\n};\n\nexport { LangContext, LangProvider };\nexport default LangProvider;","import React, { createContext, FC, useState, useCallback } from 'react';\nimport { ThemeProvider as StyleProvider } from \"styled-components\";\n\nimport { IThemeContext, IThemeProvider } from './interfaces';\n\n// theme context\nconst ThemeContext: any = createContext({} as IThemeContext);\n\n// theme provider\nconst ThemeProvider: FC<IThemeProvider> = ({ children }) => {  \n  const [ theme, set ]: any = useState({ main: '#303336', second: '#EADDC1' });\n\n  // set\n  const setColors = useCallback((main: string, second: string) => \n    set({ main, second }), [ set ]);\n\n  // render\n  return (\n    <StyleProvider theme={theme}>\n      <ThemeContext.Provider\n        value={{\n          theme,\n          setColors\n        }}>\n        {children}\n      </ThemeContext.Provider>\n    </StyleProvider>\n  );\n};\n\nexport { ThemeContext, ThemeProvider };\nexport default ThemeProvider;","import styled from 'styled-components';\n\nconst MainSection = styled.section`\n  float: left;\n  height: 100vh;\n  position: relative;\n  width: 100vw;\n\n  .stage,\n  .konvajs-content {\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n`;\n\nexport {\n  MainSection\n}","import React, { FC, useContext } from 'react';\nimport { Stage } from 'react-konva';\n\nimport Calendar from '../../components/Calendar';\n\nimport Header from '../Header';\nimport Footer from '../Footer';\n\nimport { MainContext } from '../../providers/MainProvider';\nimport { LangContext } from '../../providers/LangProvider';\nimport { ThemeContext } from '../../providers/ThemeProvider';\n\nimport { IMain } from './interfaces';\n\nimport { MainSection } from './styles';\n\n// main\nconst Main: FC<IMain> = () => {\n  const {\n    animate,\n    setAnimate,\n    loaded,\n    date,\n    setDate,\n    size,\n    scale,\n    setScale,\n    radius,\n    setRadius,\n    pos,\n    setPos } = useContext(MainContext);\n  const { lang, langs, setLang } = useContext(LangContext);\n  const { theme, setColors } = useContext(ThemeContext);\n\n  // render\n  return (\n    <MainSection\n      style={{ backgroundColor: theme.main }}>\n\n      <Header\n        date={date}\n        lang={lang}\n        langs={langs}\n        setLang={setLang}\n        setDate={setDate}\n        scale={scale}\n        setScale={setScale}\n        setColors={setColors}\n        radius={radius}\n        setRadius={setRadius} />\n\n      {loaded &&\n        <Stage\n          className=\"stage\"\n          height={size.height}\n          width={size.width}>\n          <Calendar\n            animate={animate}\n            lang={lang}\n            radius={radius}\n            setToday={setDate}\n            pos={pos}\n            scale={scale}\n            setAnimate={setAnimate}\n            setPos={setPos}\n            size={size}\n            today={date}\n            theme={theme} />\n        </Stage>}\n\n      <Footer />\n    </MainSection>\n  );\n};\n\nexport default Main;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport common_en from './translations/en/common.json';\nimport common_qu from './translations/qu/common.json';\n\n// options\nconst options = {\n  resources: {\n    en: { translation: common_en, },\n    qu: { translation: common_qu, }\n  },\n  lng: \"pt\",\n  fallbackLng: ['qu', 'en']\n};\n\n// locales\nconst locales = Object.keys(options.resources);\n\n// get current locate\nconst getCurrentLocale = () => i18n.languages.find((lng => locales.indexOf(lng) !== -1));\n\ni18n\n  .use(initReactI18next)\n  .init(options);\n\nexport { i18n, locales, getCurrentLocale };\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Main from './layout/Main';\nimport MainProvider from './providers/MainProvider';\nimport LangProvider from './providers/LangProvider';\nimport ThemeProvider from './providers/ThemeProvider';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport './i18n'; // langs\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <MainProvider>\n        <LangProvider>\n          <Main />\n        </LangProvider>\n      </MainProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}